name: 'Terraform'

on:
  push:
    branches: [ "master" ]
    paths: Terraform/**
  workflow_run:
    workflows: ["PythonBuild"]
    types:
      - completed

permissions:
  contents: read
env:
  TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_region: ${{ secrets.AWS_REGION }} 
  apigateway_url: ${{ secrets.APIGATEWAY_URL }} 
  lb_url: ${{ secrets.LB_URL }} 
  
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: Terraform/
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: Terraform/
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: Terraform/
      run: terraform plan -input=false
         
      # On push to "master", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      working-directory: Terraform/
      if: github.ref == 'refs/heads/"master"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
  tests:
    name: "Data Flow test"
    runs-on: ubuntu-latest
    environment: production
    needs: terraform
    defaults:
      run:
        shell: bash
        
    steps:
      - uses: actions/checkout@v3
      - name: Execute Script
        working-directory: Terraform/
        run: |
           chmod +x ./test.sh
           .test.sh
        shell: bash
  
